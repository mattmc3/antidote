#!/usr/bin/env zsh

emulate -L zsh
setopt local_options extended_glob

local bundles=()
if [[ $# -gt 0 ]]; then
  # handle bundle instructions as a param string
  # split on newlines
  bundles=("${(s.\n.)${@}}")
elif [[ ! -t 0 ]]; then
  # handle both <redirected or piped| input
  local data
  while IFS= read -r data || [[ -n "$data" ]]; do
    bundles+=($data)
  done
fi

# if stdin containts no data and no params were passed there's nothing to do
(( $#bundles )) || return 1

local bundlestr bundle parts optstr
typeset -a bundle
for bundlestr in $bundles; do
  # turn whitespace into spaces
  bundlestr=${bundlestr//$'\t'/ }
  bundlestr=${bundlestr//$'\r'/ }

  # remove comments
  bundlestr=${bundlestr%%\#*}

  # split on spaces into parts array
  parts=( ${(@s: :)bundlestr} )

  # skip empty lines
  (( $#parts )) || continue

  # the first element is the repo, the remaining are a:b annotations
  # split annotations into key/value pairs
  bundle=()
  bundle=( repo $parts[1] )
  optstr=( ${parts[@]:1} )
  if (( $#optstr )); then
    parts=( ${(@s/:/)optstr} )
    if [[ $(( $#parts % 2 )) -ne 0 ]]; then
      echo >&2 "antidote: bad annotation '$optstr'."
      return 1
    fi
    bundle+=( $parts )
  fi

  # output the parsed associative array
  __antidote_join $'\t' $bundle
done
