#!/bin/zsh

### Statically source all bundles from the plugins file.
#
# usage: antidote load [-h|--help] [<bundlefile> [<staticfile>]]
#
#function antidote-load {
  setopt extended_glob

  local o_help
  zparseopts $_adote_zparopt_flags -- h=o_help -help=h || return 1

  if (( $#o_help )); then
    antidote-help load
    return
  fi

  local bundlefile=$1
  local default_bundlefile=${ZDOTDIR:-~}/.zsh_plugins.txt
  if [[ -z "$bundlefile" ]]; then
    zstyle -s ':antidote:bundle' file 'bundlefile' ||
      bundlefile=$default_bundlefile
  fi
  [[ -n "$bundlefile" ]] || bundlefile=$default_bundlefile
  [[ -e "$bundlefile" ]] || touch "$bundlefile"

  local staticfile=$2
  if [[ -z "$staticfile" ]]; then
    zstyle -s ':antidote:static' file \
      'staticfile' || staticfile=${bundlefile:r}.zsh
  fi
  [[ -n "$staticfile" ]] || staticfile=${bundlefile:r}.zsh
  [[ "$staticfile" != "$bundlefile" ]] || staticfile="${bundlefile:r}.static.zsh"

  # regenerate the static file based on whether the bundle file is newer and whether
  # antidote home exists and is ready to be loaded
  local force_bundle=0
  if ! zstyle -t ':antidote:load:checkfile' disabled; then
    local loadable_check_path="$(antidote-home)/.antidote.load"
    if [[ ! -e $loadable_check_path ]]; then
      force_bundle=1
      [[ -d $loadable_check_path:h ]] || mkdir -p $loadable_check_path:h
      touch $loadable_check_path
    fi
  fi

  if [[ ! $staticfile -nt $bundlefile ]] || [[ $force_bundle -eq 1 ]]; then
    antidote bundle <"$bundlefile" >|"$staticfile"
  fi
  source "$staticfile"
#}
