#!/bin/zsh

### Clone a new bundle and add it to your plugins file.
#
# usage: antidote install [-h|--help] [-k|--kind <kind>] [-p|--path <path>]
#                         [-b|--branch <branch>] <bundle> [<bundlefile>]
#
function antidote-install {
  emulate -L zsh; setopt $_adote_funcopts
  local MATCH MBEGIN MEND; local -a match mbegin mend  # appease 'warn_create_global'

  local o_help o_kind o_path o_branch o_cond o_autoload
  zparseopts $_adote_zparopt_flags -- \
    h=o_help       -help=h       \
    a:=o_autoload  -autoload:=a  \
    b:=o_branch    -branch:=b    \
    k:=o_kind      -kind:=k      \
    p:=o_path      -path:=p      \
    c:=o_cond      -conditional:=c  ||
    return 1

  if (( $#o_help )); then
    antidote-help install
    return
  fi

  if [[ $# -eq 0 ]]; then
    echo >&2 "antidote: error: required argument 'bundle' not provided, try --help"
    return 1
  fi

  local bundle=$1
  local bundlefile=$2
  if [[ -z "$bundlefile" ]]; then
    zstyle -s ':antidote:bundle' file 'bundlefile' ||
      bundlefile=${ZDOTDIR:-~}/.zsh_plugins.txt
  fi

  local bundledir=$(__antidote_bundledir $bundle)
  if [[ -d "$bundledir" ]]; then
    echo >&2 "antidote: error: $bundle already installed: $bundledir"
    return 1
  fi

  # use antidote-script to clone our bundle
  antidote-script $o_kind $o_branch $o_path $bundle >/dev/null
  if [[ $? -ne 0 ]]; then
    echo >&2 "antidote: unable to install bundle '$bundle'."
  else
    local annotations=()
    (( $#o_branch ))   && annotations+=( "branch:$o_branch[-1]" )
    (( $#o_kind ))     && annotations+=( "kind:$o_kind[-1]" )
    (( $#o_path ))     && annotations+=( "path:$o_path[-1]" )
    (( $#o_autoload )) && annotations+=( "autoload:$o_autoload[-1]" )
    (( $#o_cond ))     && annotations+=( "conditional:$o_cond[-1]" )
    echo "Adding bundle to '$bundlefile':"
    echo $bundle $annotations | tee -a $bundlefile
  fi
}
antidote-install "$@"
